# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-02-08 10:23
from __future__ import unicode_literals

import cooking.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Project_Readonly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('price', models.FloatField(validators=[cooking.models.validate_positive])),
            ],
            options={
                'default_permissions': (),
                'managed': False,
                'ordering': ['start_date', 'name'],
                'db_table': 'cooking_project_readonly',
            },
        ),
        migrations.CreateModel(
            name='Allergen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('buying_quantity', models.FloatField(validators=[cooking.models.validate_greater_zero])),
                ('buying_measurement', models.CharField(choices=[('ml', 'Milliliter'), ('g', 'Gram'), ('n', 'Piece')], max_length=2)),
                ('calculation_quantity', models.FloatField(blank=True, null=True, validators=[cooking.models.validate_greater_zero])),
                ('calculation_measurement', models.CharField(blank=True, choices=[('ml', 'Milliliter'), ('g', 'Gram'), ('n', 'Piece')], max_length=2, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, validators=[cooking.models.validate_positive])),
                ('cheapest_store', models.CharField(blank=True, max_length=256)),
                ('remarks', models.CharField(blank=True, max_length=256)),
                ('cooked_weight', models.FloatField(default=0, validators=[cooking.models.validate_positive])),
                ('allergens', models.ManyToManyField(blank=True, to='cooking.Allergen')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Inventory_Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(validators=[cooking.models.validate_positive])),
                ('measurement', models.CharField(choices=[('ml', 'Milliliter'), ('g', 'Gram'), ('n', 'Piece')], max_length=2)),
                ('remarks', models.CharField(blank=True, max_length=256)),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cooking.Ingredient')),
            ],
            options={
                'ordering': ['ingredient'],
            },
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['time', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Meal_Receipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person_count', models.IntegerField(validators=[cooking.models.validate_greater_zero])),
                ('remarks', models.CharField(blank=True, max_length=256)),
                ('meal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cooking.Meal')),
            ],
            options={
                'ordering': ['meal', 'receipe'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'ordering': ['start_date', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Receipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('default_person_count', models.IntegerField(default=1, validators=[cooking.models.validate_greater_zero])),
                ('instructions', models.TextField()),
                ('rewrite_weight_per_person', models.FloatField(blank=True, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Receipe_Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(validators=[cooking.models.validate_positive])),
                ('measurement', models.CharField(choices=[('ml', 'Milliliter'), ('g', 'Gram'), ('n', 'Piece')], max_length=2)),
                ('remarks', models.CharField(blank=True, max_length=256)),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cooking.Ingredient')),
                ('receipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cooking.Receipe')),
            ],
            options={
                'ordering': ['receipe', 'ingredient'],
            },
        ),
        migrations.AddField(
            model_name='receipe',
            name='ingredients',
            field=models.ManyToManyField(through='cooking.Receipe_Ingredient', to='cooking.Ingredient'),
        ),
        migrations.AddField(
            model_name='meal_receipe',
            name='receipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cooking.Receipe'),
        ),
        migrations.AddField(
            model_name='meal',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cooking.Project'),
        ),
        migrations.AddField(
            model_name='meal',
            name='used_receipes',
            field=models.ManyToManyField(blank=True, through='cooking.Meal_Receipe', to='cooking.Receipe'),
        ),
        migrations.AddField(
            model_name='inventory_item',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cooking.Project'),
        ),
        migrations.AlterUniqueTogether(
            name='inventory_item',
            unique_together=set([('project', 'ingredient')]),
        ),
    ]
